
package {{basePackageName}}.api.{{entity.toLower()}};

import com.cas.iot.common.utils.ResultDTO;
import com.cas.iot.device.api.{{entity.toLower()}}.dto.{{entity}}DTO;
import com.cas.iot.device.api.{{entity.toLower()}}.dto.{{entity}}QueryDTO;
import com.cas.iot.device.api.{{entity.toLower()}}.vo.{{entity}}VO;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletResponse;
import javax.validation.Valid;
import java.io.InputStream;
import java.util.List;

/**
 * @author {{author}}
 * @version 1.0
 * @created {{date}}
 */
@RestController
@RequestMapping("/{{entity}}")
public interface {{entity}}API {
	/**
	 * add {{entity}}
	 *
	 * @param deviceTypeDTO
	 */
	@PostMapping(value = "/add")
	public ResultDTO add{{entity}}(@RequestBody {{entity}}DTO add{{entity}}DTO);

	/**
	 * delete {{entity}}
	 *
	 * @param ids
	 */
	@PostMapping(value = "/delete")
	public ResultDTO delete{{entity}}(@RequestBody String[] ids );

	/**
	 * update {{entity}}
	 *
	 * @param deviceTypeDTO
	 */
	@PostMapping(value = "/update")
	public ResultDTO update{{entity}}(@RequestBody {{entity}}DTO update{{entity}}DTO);

	/**
	 * Query by page {{entity}}
	 *
	 * @param queryDTO
	 */
	@PostMapping(value = "/queryByPage")
	public ResultDTO queryByPage{{entity}}(@RequestBody {{entity}}QueryDTO queryDTO);

	/**
	 * Import {{entity}}
	 *
	 */
	@PostMapping(value = "/import",consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
	public ResultDTO import{{entity}}(MultipartFile multipartFile);

	/**
	 * Output {{entity}}
	 *
	 */
	@PostMapping(value = "/output")
	public List<{{entity}}VO> output{{entity}}(@RequestBody {{entity}}QueryDTO deviceTypeQueryDTO);

	/**
	 * @param queryDTO
	 * @return
	 */
	@PostMapping(value = "/query")
	public ResultDTO<List<{{entity}}VO>> query{{entity}}(@RequestBody {{entity}}QueryDTO queryDTO);
    /**
     * 查询所有设备类型接口
     * @param id
     * @return
     */
    @PostMapping(value = "/getByID")
    public ResultDTO<List<{{entity}}VO>> get{{entity}}ByID{{entity}}(@RequestParam(name="id") String id);


}